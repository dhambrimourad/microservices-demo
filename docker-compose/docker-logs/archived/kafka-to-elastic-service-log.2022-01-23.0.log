2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-3, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-2
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-1, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-0
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-2-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [611743347, 32598110, 1354973586847649793, 53345875, 901864588068642816, 80686516, 1298256681118232577, 1215279667403546629, 1437408941277810699, 791652926481637376, 105112083, 3157650489, 1307028610545520643, 1183146443307126784, 1191457856270348288, 240162554, 1347396338581790723, 450128361, 1268500317500391426, 83410317, 1438546365370544133, 247292601, 218716458, 1314713086989922305, 274154712, 1346722945167552513, 1303870073610919938, 23071153, 2962969029, 153975806, 1255772393672331265, 153975806, 1450282753614913537, 608762893, 886736968419291136, 1242256221861597184, 841493923545587712, 32598110, 1441146813684207622, 989457259, 3158451439, 1255498503532445713, 1020025711250366464, 274171518, 1398675004775096325, 843572134110740480, 562906731, 65485074, 1450950236143177729, 380645532, 1458062403716149248, 1260015280048222208, 2269321586, 1363908932373200904, 104005991, 494358816, 3320582550, 1423859067613708288, 1093537100664836096, 1119043960226316289, 1479152198374367233, 3341648343, 1319980675504742400, 959135428367433728, 3159908988, 1445440610580766723, 868996576840007680, 217510835, 818624980309004288, 1153185558224613376, 1371493492640256011, 1080500210000891904, 18006576, 19863945, 1319445980320759810, 2553769874, 1571296950, 2444396610, 1412354042261499908, 1460093207451418624, 400055499, 1262009284293951490, 2884853056, 801284546859675648, 1347396338581790723, 35661455, 64433237, 354313670, 1217921646771597312, 965280861225660418, 1380529339452715011, 1355264774670585859, 1266964641558618114, 1367727092532674561, 2232654650, 1342488634260385794, 3129739949, 1095344818811736066, 888753127, 1277715645430468608, 1301445146479796232, 923930912106086405, 3158451439, 1163271446832898049, 1460389364467388417, 1114272313757851649, 4331142082, 1261977635569061888, 572208885, 1357651208756809728, 3719296572, 1332714745871421443, 49008553, 1363465260519276550, 1392059480242806787, 1369396616801685513, 1285948989888540674, 1358806251077922816, 1375961552122044417, 1403020350871400451, 1008804980789252096, 1077494044052340736, 1186774211802652672, 1268693811343081478, 370080864, 1178735116954128397, 1481395803591749633, 62825684, 1190495780320227329, 1260015280048222208, 828655988697886721, 2615563165, 1294402911309529088, 1139186989733990401, 1095567794958000128, 749306989646270464, 1369078653049528323, 54959494, 1328891707803385856, 579412132, 1356854792, 1139186989733990401, 1249296148583481345, 1282260845045719045, 1339301520928608259, 907154381577039873, 797953108085194752, 797953108085194752, 1319980675504742400, 861408977934004225, 55486201, 1363908932373200904, 1211753853185449984, 1454653850594398209, 1392672765195456513, 390945164, 943703059129077761, 4831110267, 1311282476925374464, 279542911, 2233782828, 779190002026557440, 1019265384279629825, 1260015280048222208, 1391995546282299393, 3287083921, 1399078810251890693, 1158405987763707905, 1148646039252897792, 864706543, 230807658, 2701923654, 1160280199, 1305882201628659712, 1036343947155709953, 1194238574394101760, 19805682, 70451473, 1478592787893293059, 443744138, 1309270570031362056, 1458826259912396800, 1177372551942742017, 75234613, 814530419861225472, 1268161305455865857, 1074905935447941120, 1197625387901165599, 853347376156647424, 1428315072548405252, 1451081088818765825, 1140725452224552960, 1403020350871400451, 812555214024740865, 812555214024740865, 4018697414, 907311547, 302824276, 575881019, 1311282476925374464, 1045705015141306374, 1142060546893787137, 1232868485702848512, 531393182, 1412019342712229890, 14314815, 973977536119091202, 1429601907706765312, 786854444927442944, 934543972902494208, 1095344818811736066, 1231391564410376192, 560270236, 836740285, 519041584, 1277715645430468608, 788891237197774849, 1479362321688506368, 1309270570031362056, 69012591, 1142527227004903424, 1356977990865989636, 75234613, 410299868, 1073426716436107265, 2970069216, 1381536190839451648, 1243706336019247104, 1468933403760381960, 1038167483457236992, 1315086471502721025, 806681185510244352, 1209524480185421824, 1423711044036218883, 53789489, 846046499603726338, 1025604200133275648, 809881056258101248, 811058560868159488, 906568748, 1026120708777099265, 1328125452733591555, 2689977324, 2680803261, 985502465322729474, 1056157028102651906, 1393398385093136388, 1447542906575753227, 1464743862644224009, 1429125218396565504, 1098083778700951552, 1358638751250006019, 907869710779371520, 64518371, 557824295, 1322756902921637888, 886991676249710592, 1358806251077922816, 1375961552122044417, 1313954540258054148, 1389395011247165445, 2863067669, 1635574124, 1394147599389650955, 3740354003, 1214609287978377218, 1377337465774702611, 115807981, 1098641318828523522, 1338047980637589504, 1077494044052340736, 1073522727846318080, 1410633670159912964, 902605894759759873, 1439060076438990850, 1438041987559661568, 1214020300976689152, 1720670802, 1374151778036371457, 1239427262061002752, 1345217186051317760, 1216416242078306304, 93957129, 1432069004844310529, 361732761, 1239427262061002752, 1389307247101153289, 1367862905706778631, 3519868346, 236179162, 1341688762791653376, 1325812983251918851, 1228127892493815809, 1313781021838434304, 1290392606648733697, 1347396338581790723, 1071110124473905152, 57930255, 978425771642454017, 1479073990064975884, 1436471915728736257, 3303021285, 1368957404159881220, 1436471915728736257, 1451084991715164160, 145338063, 2351440842, 14323621, 1433797734385999877, 929566812584464385, 1153646093084897280, 1216890018926616576, 1374944096033370112, 786501293330173952, 1447614549000085515, 118480977, 1262878732441849856, 1277755734734888960, 1031085313811275777, 1347396338581790723, 1145276010046349313, 1548248004, 1432601914751991809, 1337903969851613185, 1331611799053955073, 1446028129059938307, 1436471915728736257, 1477360242031828992, 4363712119, 715755482292609026, 1319980675504742400, 17466132, 1418253660610383876, 74666561, 2656354740, 801449618, 39546333, 370701444, 26228538, 812555214024740865, 172830037, 1347396338581790723, 824736766716309504, 4144524913, 1303090283182092288, 64722886, 1332714745871421443, 4162618049, 851500130872184832, 1449862572153266178, 1086970629469995008, 176204292, 871654121018986496, 1014868817909112833, 1364497572509880322, 1350711804289286150, 1371551211351121920, 228483116, 1337792858246402049, 1432838834404925440, 1341688762791653376, 1601008946, 946266958663622657, 3330336214, 861335823672856580, 1327411492782653440, 259115974, 2444826967, 1478750080182194182, 1479073990064975884, 1358156640747466752, 340845876, 1366654678579216386, 1456181544377221120, 2479368381, 82131693, 1456181544377221120, 1350558650998390786, 938779127187873792, 1479073990064975884, 576193842, 972608696, 1358156640747466752, 1407370327546494978, 318084384, 1086970629469995008, 1260015280048222208, 14442884, 1478009899674062849, 945316788304338945, 47527717, 967912023781789696, 1049979664209305600, 544688179, 747269725424492544, 236471892, 1465678221765132297, 1290843840153362433, 1393417012215431170, 1366654678579216386, 1401102222, 561867358, 1358806251077922816, 1375961552122044417, 1437266992239624192, 3037275388, 1427388188323024944, 1278651085759094784, 710123736175783938, 20774381, 1348476526313005056, 955443550048608257, 1395218798089674756, 3278949980, 906914647294349312, 611658116, 1247496334606618624, 1942368301, 1447626168, 413716264, 1409726425, 838254506, 1314994934403854338, 265809326, 1905132553, 1260754391906353152, 1418581111303770120, 1181983060750979072, 316380664, 194031737, 1461314785677561858, 1479073990064975884, 300316159, 1453645496099098632, 1112755953328443393, 1465733236328435714, 296369870, 1429125218396565504, 1390777272441966598, 2922807252, 1178567258114859008, 753272432102813697, 104651157, 1112755953328443393, 789226992713408513, 738066930246942721, 784456612199170048, 1371551211351121920, 1466882243339689988, 1469587523064057860, 1469138823065919488, 21799851, 1246962647209254912, 144367968, 1055639487626338304, 68851677, 1209524480185421824, 1370077006596075521, 1390919040034426885, 1325471891792990215, 200080261, 955443550048608257, 1371644735392075778, 104631611, 1073161859711156224, 1364497572509880322, 856072920510021632, 957767700306161664, 775389437672947717, 1051341571726168064, 475095014, 1201618999, 1069634716888956929, 75789828, 252257573, 2342381986, 622834933, 969863831555014656, 231986507, 1410347278615957515, 1322904319809720321, 570896393, 1454687900038090752, 3044805941, 888694116695113728, 2480366467, 996212967460036609, 3407884762, 1234406166479998976, 1402260495533588485, 1350973387984822277, 1303489569296388099, 1442166967973015554, 1415761361221689349, 23592342, 113754405, 1459723895138058244, 1937197952, 1367184183420989440, 142040452], partitions [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 73
2022-01-13 01:25:47 [twitter-topic-consumer-0-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1347686068817174535, 1005386018, 1391800160720769025, 1148986892110696448, 152227630, 1353503896438714368, 1127225751189823488, 852895370636140544, 2422588014, 1125346645, 1379788857101590531, 1358507857029849093, 727998759452430336, 1440412056297955328, 392703262, 1018952993335664642, 1169959000567242752, 1397184773466951680, 1315582810300780544, 1335316959907336192, 3625085292, 1346528892937515008, 855094963436236801, 2417960281, 994657901313757184, 86227624, 1216825175708196865, 769264730158444544, 1477205334, 179960702, 1350552082437300224, 3984712338, 1252196708538343424, 1167830599, 1300822388016394240, 1473059472939626500, 1233174377233092609, 3254160784, 1442322727197495297, 1390558417698234373, 1450211253792776192, 1164003674143821824, 720023789187252225, 1384065700449296390, 1390655095625461765, 1481387246700068864, 1469798605410430976, 1080860575301857281, 1116777395829260288, 1034649902230331394, 1363392264, 15962021, 1217782836339642373, 1351835621606748162, 1216820377302786051, 1390773618506878977, 213798955, 1351728788233707520, 980477244161306624, 1143858319016095744, 592205075, 1250011213666410498, 43641841, 1384230027517071366, 2610059798, 2496912271, 3044414704, 1474905380396359689, 1107713109228220416, 1089469058783703040, 1335151590710210562, 16555854, 282623660, 1469798605410430976, 1224882954670731264, 1051144274643963904, 1395022107675926530, 1447695432252108801, 1171143021678796802, 1086397159480676352, 1148335923140149249, 1354653284213039105, 3347856575, 322121963, 1274811943874818048, 1155720331002359808, 1477058629006155776, 499132104, 263808465, 1209566325338759168, 564006811, 2800172256, 3652935734, 1367486922935963652, 1294615798896644096, 1341516954746568704, 1314164146934513665, 1256546031375876096, 1137557046633598979, 1393290642596454402, 1423655520196435969, 1094416982919778304, 38161540, 1448970101491830785, 1307620500521193472, 1442511350907867140, 1456138718537035778, 1391684065624002560, 930324661325381634, 993410346089156608, 1094416982919778304, 65791746, 1469645571732520960, 1451136653440000001, 1281290970311598081, 1403670803837685764, 2835443948, 1303158880986378244, 990433790467166209, 78848284, 870965010465517568, 544015527, 1101610636893741057, 1464285388860801028, 1402821693207363587, 1000692225905430528, 1274297266967281664, 2699635659, 2553438294, 1426743571835604992, 1448950105059598336, 593289567, 1231429020706844672, 1111804369626902528, 200627501, 1458909778223185928, 1448970101491830785, 1191529693809385472, 1107735202036625410, 10099022, 2793514363, 489813989, 244524020, 73915224, 24920395, 1267463292785590273, 1138930473726402560, 2949443378, 1455509157814026246, 1340416710306799616, 1386109685741260803, 1423655520196435969, 1188064315439505408, 1322345978817507328, 2569603696, 1117560303041044486, 1314164146934513665, 4184574988, 1319266176183263232, 1291183426238783489, 3220920230, 1384934231558828032, 1457542526416875520, 1330350611796209666, 22464853, 560405654, 192612422, 144120109, 57882435, 1258707640303026176, 978201573078773760, 967784389, 3482894116, 1520531898, 942816613480435712, 3305842305, 1390914753346801668, 2196162025, 929983763504816128, 935956028562255872, 4613153424, 1423655520196435969, 1229110233236168705, 604507326, 1292441260406394883, 1128479592296087552, 1433446729, 1359987118387441666, 104259954, 1023682637603528704, 1350870811389919233, 25015865, 593289567, 4744971389, 701708536414388224, 1386109685741260803, 1192174623296774149, 4804553866, 1346546157145751557, 2924993491, 1473086554847518723, 280319538, 829504380030242817, 1423655520196435969, 1324028067086389250, 1291596242871517185, 51282807, 1304144237215256579, 344658232, 2467565462, 2898865516, 1133813335814754305, 1206384726090477568, 389908768, 972151108301881345, 1015264244407795712, 1459889087859421191, 150193285, 2386038751, 1071381565869936641, 1185139071909122048, 1107139813918953472, 1293510025680478208, 1431304492679634957, 4860435541, 889814079103160320, 1298399825243799552, 2298634531, 1310979285398806529, 191276094, 1236766823128981504, 21458110, 1216137515381342208, 1437728609909706753, 1237018041592004611, 557432619, 1449633833322700802, 1003898407365300225, 776503480144031744, 1367344486230106115, 1383905702633041925, 537851791, 1220689032415285248, 929457326683246592, 1183078912265355265, 266435809, 1123237246478499840, 1370470236659453952, 173307170, 3817868895, 1138930473726402560, 1166793412319858689, 1450269283154423811, 586532071, 871787588239208448, 1382997644247773196, 914829877819334656, 2328506468, 1112759204815740929, 929983763504816128, 1389588968891682818, 1372969968887853064, 2831442335, 914829877819334656, 1107190698363760641, 1239562721764544513, 1395930029284941825, 25668131, 1340031077096726528, 1061025129000386560, 1455480568435462149, 2718404402, 1256290463537082369, 797879678270865408, 539480469, 1244785582812925953, 1460441068877410304, 1338185060076433408, 283604227, 1404319931768791040, 2740462426, 1081695446, 1314199128818114562, 1114547959516082176, 963118520321171457, 126034464, 912109817375866880, 1464407414724349953, 237942019, 3153864918, 1409630637057843203, 706776732951404544, 1278516939040710662, 1299538371644198914, 2734701992, 1325779067098914819, 174071364, 958737479221370881, 572921263, 1263441284083171330, 35061677, 1467543329088974855, 4451479589, 590404093, 2393249605, 1305548399136006145, 1429226358173880329, 786212821, 1198264168253554689, 2214380875, 2875077803, 1257503171813019650, 1330329119805104131, 20427789, 1389676771751063554, 1426292243875381251, 1480861899285843968, 1455981492421677058, 894493663794835456, 1473106355489759233, 302720880, 2740462426, 1142703082754715648, 1398866593237508100, 1398866593237508100, 1398866593237508100, 2740462426, 739081196559306752, 1386109685741260803, 752122638936395777, 756147538361618433, 3403099336, 1448708832750936064, 737502651949060100, 249844873, 1058821318307733504, 889938048, 1318380296274812928, 7160462, 245630355, 1230685090914672645, 2747726845, 1160625167858577409, 1448950105059598336, 1330329119805104131, 1089861156653608960, 1453763896750362628, 34343286, 1330350611796209666, 1029162342, 635180546, 1423655520196435969, 4138386130, 923483796, 1147180069724364800, 2368888980, 1079809038681018369, 1455994390464323584, 1470395469943693319, 193856637, 1448950105059598336, 1117334105748905984, 1350612593430454272, 1187521415760826368, 1380277846464204800, 1023688461616701440, 1480413767053631489, 1441067226895814664, 1314164146934513665, 1285364609105514496, 1386109685741260803, 485164901, 1148355235821379587, 732567915757744128, 1423655520196435969, 739547522998411265, 1256290463537082369, 1669211472, 1260815747917336576, 1460232100452446218, 1428663277551185920, 843311042629316609, 752274879467048960, 2811251353, 1373087993339154433, 996605196, 14829000, 1388883406012833795, 1478015827610062850, 2743818712, 966328124962058242, 709981298, 822934750147072009, 3434719643, 188106385, 58730835, 996087190227742720, 1336964132289929216, 4356069081, 952670149, 3999214100, 1401557463535587331, 3958778295, 3059139049, 1080440616079654913, 952636350158819328, 4484191755, 1451003485411893248, 20692128, 37990318, 775519985921888256, 1198600514159751169, 1392436580, 39328620, 184925311, 1142424032794406912, 196381580, 3128967452, 1964697812, 868518878137024512, 868518878137024512, 1255329850585464833, 954848263538118656, 1369057616450654215, 1333079497042747393, 1160384332634021888, 1236242196673724417, 385720722, 1392436580, 1449422538317123585, 1400812669653950470, 1184647517323038722, 2452187495, 1090653566619000832, 2467565462, 844365443179667456, 1268945062932725760, 1366603918281646080, 1473697089632747524, 45468175, 1357345854818951170, 520864518, 1452127961495191552, 153044005, 1115379787, 932313224355176448, 1173667997472477185, 825087973993627648, 1171944756307533825, 752478863796670464, 24218152, 1183432646187077632, 1425967772740161541, 133107423, 1458043922970775556, 383744177, 1470752678758469633, 1053298711130972160, 1162238675607928834, 1405716639040036867, 712863002542923776, 3083465492, 1438675675930451968, 15850297, 890647898601533441, 1234343402956783618, 812853934478032897, 1205791924214329344, 922674901181501440, 820468898, 169669557, 314144154, 499468150, 1325171355923357696, 1155108580028276742, 1410487025220861955, 391817630, 176639293, 1419790964076515331, 868800265113284609, 1430271774080569354, 1466483432402345988, 958340744565026817, 149328288, 970651310554079234, 1098624508724948992, 1428047075997007880, 1469798605410430976, 1329986994479382531, 257103704, 1320108993994493953, 940133993613180928, 74244705, 813096266, 1400027749285203974, 1451003485411893248, 3051787262, 1228286323, 4383231012, 1444269691325779970], partitions [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 67
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  o.a.k.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-twitter-topic-consumer-2, groupId=twitter-topic-consumer] Seeking to offset 0 for partition twitter-topic-1
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception; nested exception is org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.SeekToCurrentBatchErrorHandler.handle(SeekToCurrentBatchErrorHandler.java:72)
	at org.springframework.kafka.listener.RecoveringBatchErrorHandler.handle(RecoveringBatchErrorHandler.java:124)
	at org.springframework.kafka.listener.ContainerAwareBatchErrorHandler.handle(ContainerAwareBatchErrorHandler.java:56)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchErrorHandler(KafkaMessageListenerContainer.java:1758)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1632)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchListener(KafkaMessageListenerContainer.java:1506)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1489)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1143)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1048)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.base/java.util.concurrent.FutureTask.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(java.util.List<com.microservices.demo.kafka.avro.model.TwitterAvroModel>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>,java.util.List<java.lang.Long>)' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1; nested exception is org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2057)
	... 9 common frames omitted
Caused by: org.springframework.dao.DataAccessResourceFailureException: elastic-1; nested exception is java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchExceptionTranslator.translateExceptionIfPossible(ElasticsearchExceptionTranslator.java:76)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:378)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:361)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.doBulkOperation(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.bulkIndex(ElasticsearchRestTemplate.java:195)
	at org.springframework.data.elasticsearch.core.DocumentOperations.bulkIndex(DocumentOperations.java:152)
	at org.springframework.data.elasticsearch.core.AbstractElasticsearchTemplate.save(AbstractElasticsearchTemplate.java:175)
	at org.springframework.data.elasticsearch.repository.support.AbstractElasticsearchRepository.saveAll(AbstractElasticsearchRepository.java:211)
	at jdk.internal.reflect.GeneratedMethodAccessor48.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.data.repository.core.support.ImplementationInvocationMetadata.invoke(ImplementationInvocationMetadata.java:72)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:382)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:205)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:549)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:155)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor47.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy78.saveAll(Unknown Source)
	at com.microservices.demo.elastic.index.client.service.impl.TwitterElasticRepositoryIndexClient.save(TwitterElasticRepositoryIndexClient.java:28)
	at com.microservices.demo.kafka.to.elastic.service.consumer.impl.TwitterKafkaConsumer.receive(TwitterKafkaConsumer.java:75)
	at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:321)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.invoke(BatchMessagingMessageListenerAdapter.java:170)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:162)
	at org.springframework.kafka.listener.adapter.BatchMessagingMessageListenerAdapter.onMessage(BatchMessagingMessageListenerAdapter.java:58)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchOnMessage(KafkaMessageListenerContainer.java:1735)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessageWithRecordsOrList(KafkaMessageListenerContainer.java:1726)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeBatchOnMessage(KafkaMessageListenerContainer.java:1684)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeBatchListener(KafkaMessageListenerContainer.java:1613)
	... 7 common frames omitted
Caused by: java.lang.RuntimeException: elastic-1
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.translateException(ElasticsearchRestTemplate.java:376)
	... 56 common frames omitted
Caused by: java.io.IOException: elastic-1
	at org.elasticsearch.client.RestClient.extractAndWrapCause(RestClient.java:828)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:248)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:235)
	at org.elasticsearch.client.RestHighLevelClient.internalPerformRequest(RestHighLevelClient.java:1613)
	at org.elasticsearch.client.RestHighLevelClient.performRequest(RestHighLevelClient.java:1583)
	at org.elasticsearch.client.RestHighLevelClient.performRequestAndParseEntity(RestHighLevelClient.java:1553)
	at org.elasticsearch.client.RestHighLevelClient.bulk(RestHighLevelClient.java:533)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.lambda$doBulkOperation$8(ElasticsearchRestTemplate.java:242)
	at org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate.execute(ElasticsearchRestTemplate.java:359)
	... 55 common frames omitted
Caused by: java.net.UnknownHostException: elastic-1
	at java.base/java.net.InetAddress$CachedAddresses.get(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName0(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at java.base/java.net.InetAddress.getAllByName(Unknown Source)
	at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:664)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager$InternalAddressResolver.resolveRemoteAddress(PoolingNHttpClientConnectionManager.java:635)
	at org.apache.http.nio.pool.AbstractNIOConnPool.processPendingRequest(AbstractNIOConnPool.java:474)
	at org.apache.http.nio.pool.AbstractNIOConnPool.lease(AbstractNIOConnPool.java:280)
	at org.apache.http.impl.nio.conn.PoolingNHttpClientConnectionManager.requestConnection(PoolingNHttpClientConnectionManager.java:295)
	at org.apache.http.impl.nio.client.AbstractClientExchangeHandler.requestConnection(AbstractClientExchangeHandler.java:377)
	at org.apache.http.impl.nio.client.DefaultClientExchangeHandlerImpl.start(DefaultClientExchangeHandlerImpl.java:129)
	at org.apache.http.impl.nio.client.InternalHttpAsyncClient.execute(InternalHttpAsyncClient.java:141)
	at org.elasticsearch.client.RestClient.performRequest(RestClient.java:244)
	... 62 common frames omitted
2022-01-13 01:25:47 [twitter-topic-consumer-1-C-1] INFO  c.m.d.k.t.e.s.c.i.TwitterKafkaConsumer - 500 number of messages received with keys [1407744040339136512, 924465918, 807426155317837824, 932193033277259776, 1198010499847376899, 1410335501987549188, 1387883829780746240, 1364264819122196486, 744189391405342722, 1375862203086163974, 880176109400338434, 956152063796260865, 723224620367773696, 2819120790, 1357248507627905026, 712815423113338880, 1451478859866521601, 1206587251641073664, 1255085930765058048, 1451905285908480001, 1191819524967821312, 1074853266196975623, 345647311, 479811706, 1369026853038657536, 1120453319296679936, 1332041244634124288, 1337430590241562626, 1391887969456373760, 1448297335126204421, 1332041244634124288, 1412099018784661512, 1467031850195439620, 1451713890216300548, 76100815, 1428113891708526593, 41499285, 1369648070296707074, 519071482, 3288293494, 1346238297115394050, 1438697371806826496, 1389304153533472772, 1102418000907522048, 774620576, 131202788, 3044715477, 1400291392723816449, 1162113081436188673, 1428299052123254785, 499422669, 1271361641217654784, 1522468057, 4819779538, 3207265785, 1070433402334134278, 1352837256999018496, 172501539, 1438039208824692740, 332446086, 996500776687202304, 978077031459180544, 1331428233418592256, 1345800864, 1478339561725915137, 2767175236, 1378039103623680000, 1006343809901387776, 616450742, 1448297335126204421, 1138954658247057408, 1144325414346788867, 976522423, 1337430590241562626, 1095706810739089408, 780707721209188352, 1083325321921916928, 3193456875, 1216032107073605633, 1241420925632905219, 1451679494700298243, 74544792, 2527862989, 1088354114491150336, 1269609953922371589, 1366637598291099649, 1115615371350794240, 714037848375058432, 1212327699181518849, 1287816393660837888, 721174481775906816, 1311267940088467458, 237572596, 1022060769536552960, 3374805171, 1337430590241562626, 1385522673111949312, 1404491652580843525, 1264865390, 1442269925897211904, 1447700528180387840, 1275844034762870787, 1455673690226495491, 1327735346, 1083325321921916928, 1431850145029623814, 959653767296647168, 4697664391, 1442311546227494912, 1333198376100388865, 37148074, 1232348810, 1248872561699688448, 995651741826863111, 1250164632968298497, 1382032616824651777, 66728932, 69043302, 1223202862634864640, 1337430590241562626, 1337430590241562626, 160850438, 1026484626511081472, 982022698753839104, 334381910, 1481395744397475840, 1108469096369262592, 1461218598333333505, 820417073797009413, 237480014, 120315592, 996819280783175680, 43551982, 1356463911801917440, 2321532968, 26639434, 1104196213992239109, 1448297335126204421, 1394524030418313218, 1364347419455029249, 1164107754, 22974774, 3000889809, 1480778418451279874, 1382032616824651777, 1250164632968298497, 1460365153346674691, 770110272493219840, 12056892, 1358205324969263104, 2612142824, 1356463911801917440, 1425657605905596421, 2841370658, 3296504335, 1353346132185903104, 237480014, 895545611214176261, 1480634858204454913, 749701964074717188, 868009903687958528, 5905672, 994767450859286528, 17548667, 1390072499740848128, 544076988, 1391809788904841217, 1391799889764438023, 1105713556488507392, 1440669771951853592, 253541729, 1348745567191621633, 48262918, 50158116, 1337430590241562626, 1469564212716642304, 129429821, 3000889809, 1131609936214024195, 834472603171639299, 1446922300889120772, 1283965825590984704, 1143953143199412226, 1100605617637650433, 1287239990804701187, 2851345257, 1258833442390904833, 2370777852, 1283864878793531403, 1472215289874034698, 1337430590241562626, 3226892693, 1411206579022561282, 1312544334361718784, 1326179704244613121, 822670500673376256, 1472878307679088644, 1425932679715987459, 1480289822090555392, 1467232890765328387, 152230370, 1451344338118713355, 1149682454405533703, 1553687150, 1005481380355235840, 179627617, 1252650084, 1450263715899609090, 248879837, 1453785506349600769, 1315316425762930691, 998685805743927297, 1464986460722012161, 359915623, 1214337480037720066, 1382618139020648448, 2290721851, 359915623, 757585638707204096, 1337203101355401216, 2361023209, 1337430590241562626, 262710048, 49549147, 1169350226295083009, 1249429253826826242, 889273482651029505, 1336881493638062080, 1260917857895899137, 1336881493638062080, 1591052575, 1143445995289604097, 1353743659, 1272239844169617408, 2853049157, 1450263715899609090, 3351915291, 1016439738, 1220927087512641547, 500491243, 1382030130420330501, 1358205324969263104, 1027129900828909568, 1450263715899609090, 1447212348482064394, 1326587951585894407, 4855904459, 1387975390149349379, 1442404689316700168, 1448297335126204421, 1448297335126204421, 1448297335126204421, 781869059805745152, 1455673690226495491, 3187050150, 1337430590241562626, 1179043828499730433, 1411627365533421571, 1405791087785091074, 2828606066, 1469564212716642304, 1086159045604577280, 1465325262132813824, 4694067822, 1388159864824758272, 1455673690226495491, 1429482632883150850, 1470605456372604928, 1441690464415981577, 1491776394, 854630201904508928, 4506802514, 1382204230635704323, 1469564212716642304, 37430539, 2675562445, 1410208364538195979, 51332899, 1400291392723816449, 1257238606541774848, 1291902870309294081, 1729193269, 1315532114813648896, 170722146, 1254424548, 1158909320114974722, 1344219247413784577, 43346498, 761295159896268801, 1427974165756354563, 1405651120807047169, 1438039208824692740, 2596830304, 924689640203964421, 315056091, 1392121717708009475, 721378032, 1235556740718092290, 1448869828458991623, 2731806183, 1095843946331291649, 2998528397, 1478695959651622917, 1480813063817383937, 1480289822090555392, 2686238562, 1080119502669533184, 894999311406288898, 39522014, 297732920, 1234044757749321728, 2845111470, 818445897893744641, 83267598, 2731806183, 1414703152973111298, 1272788861827944450, 1221361546472906757, 1232348810, 1344219247413784577, 949456045516165120, 3821597308, 3656566461, 1337430590241562626, 3905131696, 71432721, 1278966309510959104, 1426555702638780416, 1290686039799918592, 1130890745710350336, 23258486, 619496827, 852989877469753348, 328015744, 1394524030418313218, 1054784820256104448, 1298343617367429120, 1134964228538769408, 812407540667584512, 1872705554, 854331133844217856, 1880347178, 606172466, 80886782, 874826389593116672, 1349370027443683328, 886712035890741252, 1033652982846504960, 3193456875, 1385280295289511938, 895136248058097664, 2713520248, 556177798, 1427446861720297513, 49233038, 910906933774884864, 1469170327280312323, 1246309400152809472, 21156120, 910906933774884864, 1256745268327956481, 1400200699510546434, 1213607051093348358, 622321633, 992507308734406657, 1685378066, 1309475817051750400, 1035101305868562432, 1246309400152809472, 1255844431149875202, 1389003677994737665, 3229922407, 25409688, 1973860100, 1353346132185903104, 323205902, 734508383248715776, 1401368894, 1246309400152809472, 1337430590241562626, 1139980677582086144, 1146134038480064517, 1270242054145110016, 1462356436143546368, 311258998, 703938104336523264, 51332899, 1479998523802152965, 1211394495654162433, 1469564212716642304, 1426544938628501505, 1035877228410679296, 1387883829780746240, 1072609298, 1337430590241562626, 1469564212716642304, 1459541117276278786, 1867084819, 120329535, 1469564212716642304, 1294645628006359042, 1074696922307461121, 1419805251855687682, 2328896910, 1445271465486553088, 1448297335126204421, 1448297335126204421, 1352010020033073154, 1469564212716642304, 1431374549292130315, 232919230, 1274711087246606337, 468607237, 1403164895726690304, 1337430590241562626, 1469564212716642304, 1228091158640889856, 1217568470465794049, 1454258959771004933, 1094401399733927936, 96043922, 833463064125124608, 1382032616824651777, 1250164632968298497, 749205710, 1449959607594622979, 1305900199869636609, 1445123590811172869, 824344931078545408, 1729193269, 3227247134, 788969594086039552, 1248500047630569472, 1623843974, 1188017467567693831, 711557462843858945, 1682496764, 883532293, 1273197347967610880, 1222894323152195586, 782440584111718400, 550251901, 1110678241851916288, 1118614450578366466, 1283965825590984704, 2218050925, 1251617146205061122, 1457108444839030784, 1449539800877387781, 1427753058457591814, 938980848983883781, 4342135093, 903232350175105024, 1022890732473004034, 318240030, 1314512183137579008, 1959842196, 16379015, 2477536604, 2648849144, 980569633399992323, 1158639228550569984, 16379015, 1392274950162104327, 1394524030418313218, 3040280755, 595248525, 1370984277509353472, 1112432688965648384, 1242979850391969792, 1411141643764441100, 1401368894, 261285025, 1383568436438069253, 16379015, 605669550, 1729193269, 1390125313925996552, 1449700901107781634, 1135322696454041600, 992307060, 3169188570, 1299534063678750721, 1194443793317056512, 1379870974766616581, 112281135, 1249135147221303296, 456794188, 1729193269, 1401627632874266628, 1171789561267195910, 452585001, 1480190505812049922, 1320891919153745922, 948671631026737157, 381294047, 1079910398776745984, 2585973360, 2701139078, 1300143628682252288], partitions [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] and offsets [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], sending it to Elastic: Thread id 69
